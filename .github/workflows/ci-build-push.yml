name: CI â†’ Test, Build & Push

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: composer

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Lint (PHPCS)
        run: vendor/bin/phpcs --standard=PSR12 src

      - name: Static analysis (PHPStan)
        run: vendor/bin/phpstan analyse src --no-progress --memory-limit=1G

      - name: Unit tests (PHPUnit)
        run: vendor/bin/phpunit --configuration phpunit.xml --testdox

  build-and-push:
    # Only build/push on push to main or tags, not PRs
    if: github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write   # for GHCR with GITHUB_TOKEN
      id-token: write   # for OIDC (optional)
    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login (GHCR with GITHUB_TOKEN)
      - name: Log in to GHCR
        if: env.REGISTRY == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          REGISTRY: ghcr.io

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/heads/main') }}
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:buildcache,mode=max

      - name: Tag commit
        if: github.ref == 'refs/heads/main'
        env:
          TAG: build-${{ github.run_number }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$TAG"
          git push origin "$TAG"
